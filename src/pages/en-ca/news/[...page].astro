---
import { useStoryblokApi } from "@storyblok/astro";
import NewsPage from "@components/pages/news/index.astro";
import { enCA, pageSize } from "strings/routing";

type NewsPost = {
  title: string;
  date: string; // '2022-08-31 13:03'
  logo: { filename: string; alt: string };
  image: { title: string; filename: string; alt: string };
  slug: string;
  full_slug: string;
};

export async function getStaticPaths({ paginate }) {
  const storyblokApi = useStoryblokApi();
  let i = 1;
  const allPosts = [];
  const MAXIMUM = 100;

  while (true) {
    const { data } = await storyblokApi.get("cdn/stories", {
      version: import.meta.env.DEV ? "draft" : "published",
      content_type: "newsPost",
      starts_with: enCA,
      page: i,
      per_page: MAXIMUM,
    });
    allPosts.push(...data.stories);
    if (data.stories.length < MAXIMUM) break;
    i += 1;
  }

  const newsPosts = allPosts
    .map((blogPost) => ({
      ...blogPost.content,
      slug: blogPost.slug,
      params: { slug: blogPost.slug },
    }))
    .sort((a, b) => (new Date(a.date) < new Date(b.date) ? 1 : -1));

  return paginate(newsPosts, { pageSize });
}

const { page } = Astro.props;
---

<NewsPage page={page} />
